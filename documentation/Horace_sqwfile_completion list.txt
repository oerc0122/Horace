
sources_pix_section still not updated to reflect ne_max



=================================================
Things to do to finish off Horace IO change:
=================================================
- In combine:
	- Misc:
		does read_sparse2 work if give [ilo,ihi] corresponding to zero range?
		can we make read_sparse2 more efficient if know full range, or ilo>ihi?

- In put_sqw_data_pix_from_sources:
	- trap errors better

- cut_sqw_main and cut_data_from_file do direct reads still rather than going via get_sqw
- cut_data_from_file calls put_sqw_data_npix_and_pix_to_file
- cut_dnd_main, cut_sqw_main: Need to open files correctly (put_sqw_open at the moment)
- replace write_nsqw_to_sqw with combine_sqw and combine

- put author and version into all Horace and Herbert functions


=================================================
*** DO NOT FORGET ***
=================================================
sources_pix_section
	- need to handle case of one bin having more pixels than the pixel buffer size
	- need to add case of sparse data with multiple spe files
	- capture case of repeated pixels


=================================================
Check
=================================================
Does put_sqw need to be able to take an sqwfile structure as input?

Does combine check that different crystal reorientations are not being mixed?


=================================================
Optimisations
=================================================



=================================================
Maybe?
=================================================
Add rebin, integrate (+others methods?) from IX_dataset_nd

Change appversion to reduce times to read (too long!)

Fast version of is_sqw_type_file that does not read the full header information from v3 and earlier


=================================================
Bugs
=================================================
get_efix_horace('c:\temp\crap_dnd.d2d')

Herbert non-monotonic 1D array if point data


=================================================
House-keeping
=================================================
- get_test_get_calculations - should be better documented!

- is there a systematic naming scheme for accessing private
  functions that need to be tested as part of the unit tests program?
	accumulate_cut_tester
	calc_projections_tester
	get_test_calc_projections

- Tests to include:
	- test_sparse 	[private]


